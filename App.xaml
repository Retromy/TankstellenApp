<Application x:Class="TankstellenApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TankstellenApp"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!-- Farbverlauf für Buttons, wird im Standard-Button-Style verwendet und ersetzt damit das Standard-Design aller Buttons in der Anwendung.-->
        <LinearGradientBrush x:Key="ButtonNeu" StartPoint="0,-1" EndPoint="1,1">
            <GradientStop Color="Black" Offset="0" />
            <GradientStop Color="Yellow" Offset="0.4" />
            <GradientStop Color="orange" Offset="0.7" />
            <GradientStop Color="black" Offset="1" />
        </LinearGradientBrush>

        <!-- Standard-Button-Style: Ersetzt das Standard-Design aller Buttons -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="{StaticResource ButtonNeu}" />
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Margin" Value="0,0,25,0" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                            <!-- Äußerer Rahmen mit abgerundeten Ecken -->
                            <Rectangle x:Name="outerRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="#616161" RadiusX="20" RadiusY="10" StrokeThickness="3" Fill="Transparent" />
                            <!-- Innerer Bereich mit Farbverlauf -->
                            <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="Transparent" StrokeThickness="10" Fill="{TemplateBinding Background}" RadiusX="20" RadiusY="7" />
                            <!-- Overlay für gedrückten Zustand -->
                            <Rectangle x:Name="pressedOverlay" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Black" Opacity="0.4" RadiusX="20" RadiusY="10" Visibility="Collapsed"/>
                            <!-- Button-Inhalt (Text, Icon, etc.) -->
                            <DockPanel Name="BlackButtonPanel">
                                <ContentPresenter x:Name="BlackButtonPresenter" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" />
                            </DockPanel>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <!-- Zeigt Overlay, wenn Button gedrückt wird -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="pressedOverlay" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style für den Konfigurations-Button (runder Button mit Zahnrad-Icon) -->
        <Style x:Key="configButton" TargetType="Button">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="#ffa500"/>
            <Setter Property="Foreground" Value="#474747"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        
                        <Grid>
                            <!-- Äußerer Ring -->
                            <Ellipse
                                x:Name="PART_OuterEllipse"
                                Stroke="#474747"
                                StrokeThickness="2"
                                Fill="{TemplateBinding Foreground}"/>
                             <!--Innerer Kreis--> 
                            <Ellipse
                                x:Name="PART_InnerEllipse"
                                Margin="2"
                                Fill="{TemplateBinding Background}"/>
                             <!--Button-Inhalt (z.B. Icon oder Text)--> 
                            <ContentPresenter
                                Content="⚙"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <!-- Farbänderung beim Drücken -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="PART_InnerEllipse" Property="Fill" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
